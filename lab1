#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

int main(int argc, char *argv[]) 
{
	int ch, c, n, a, b,d,e,f,g,h,i;
	char s[1000];
	FILE* file;
	file=fopen("hfgf.txt", "r");
	fgets(s, 1000, file);
	if (file == NULL)
    {
        printf("Error read file!");
    }
    else
    {
		while ((ch = fgetc(file)) != EOF)
		{
			int c, n;
			c=0, n = 0;
			if (ch == '\n') 
	            n++; 
	        else 
	            c++;
		char s[c];
		int vowels(char s[1000])	
		{
				int k,i;
				k=0;
				for (i=0; i<1000; i++)
				{
					if ((s[i]= 'a') || (s[i]= 'i') || (s[i]= 'o') || (s[i]= 'u')|| (s[i]= 'y'));
					k=k+1;
				}
			return k;
			}
		int UPvowels(char s[1000])	
			{
				int k,i;
				k=0;
				for (i=0; i<1000; i++)
				{
					if ((s[i]= 'A') || (s[i]= 'I') || (s[i]= 'O') || (s[i]= 'U')|| (s[i]= 'Y'));
					k=k+1;
				}
			return k;
			}
		int consonants(char s[1000])	
			{
				int k,i;
				k=0;
				for (i=0; i<1000; i++)
				{
					if ((s[i]= 'b') || (s[i]='c') || (s[i]== 'd') || (s[i]== 'f')|| (s[i]== 'g') || (s[i]== 'h') || (s[i]= 'j') || (s[i]= 'k') || (s[i]= 'l')|| (s[i]= 'm') || (s[i]= 'n') || (s[i]= 'p') || (s[i]= 'q') || (s[i]= 's')|| (s[i]= 't') || (s[i]= 'v') || (s[i]= 'w') || (s[i]= 'x') || (s[i]= 'y')|| (s[i]= 'z'));
					k=k+1;
				}
			return k;
			}
		int UPconsonants(char s[1000])	
			{
				int k,i;
				k=0;
				for (i=0; i<1000; i++)
				{
					if ((s[i]== 'B') || (s[i]== 'C') || (s[i]== 'D') || (s[i]== 'F')|| (s[i]== 'G') || (s[i]== 'H') || (s[i]== 'J') || (s[i]== 'K') || (s[i]== 'L')|| (s[i]== 'M') || (s[i]== 'N') || (s[i]== 'P') || (s[i]== 'Q') || (s[i]== 'S')|| (s[i]== 'T' || (s[i]== 'V') || (s[i]== 'W') || (s[i]== 'X') || (s[i]== 'Y')|| (s[i]== 'Z')));
					k=k+1;
				}
			return k;
			}
			
		int prob(char s[1000])	
			{
				int k,i;
				k=0;
				for (i=0; i<1000; i++)
				{
					if (s[i]== ' ') 
					k=k+1;
				}
			return k;
			}
		int symbols(char s[1000])	
			{
			int k,i;
			k=0;
			for (i=0; i<1000; i++)
			{
				if (s[i]== ',' || s[i]== '.' || s[i]== '-' || s[i]== ':' || s[i]== '!' || s[i]== '?') ;
				k=k+1;
			}
		return k;
		}
		double numbers(char s[1000])
			{ 
			int i, k;
				k = 0;
				for(i=0; i<1000; i++)
        			{
			            if((s[i]>='0' && s[i]<='9'))
			            k=k+1;
			        }
			return k;		
			}
		}
		a == (int)(numbers(s[1000]));
		b == (int)(symbols(s[1000]));
		d == (int)(prob(s[1000]));
		e == (int)(vowels(s[1000])+ UPvowels(s[1000]) + consonants(s[1000]) + UPconsonants(s[1000]));
		f == (int)(vowels(s[1000])+ consonants(s[1000]));
		g ==(int)(UPvowels(s[1000]) +UPconsonants(s[1000]));
		h == (int)(vowels(s[1000])+ UPvowels(s[1000]));
		i == (int)(consonants(s[1000]) + UPconsonants(s[1000]));
		}
	printf("Êîëè÷åñòâî ñèìâîëîâ:\n %d", c);
	printf("Êîëè÷åñòâî ñòðîê:\n %d", n);
	printf("Êîëè÷åñòâî öèôð:\n %d", a);
	printf("Êîëè÷åñòâî çíàêîâ ïðåïèíàíèÿ:\n %d", b);
	printf("Êîëè÷åñòâî ïðîáåëüíûõ ñèìâîëîâ:\n %d", d);
	printf("Êîëè÷åñòâî áóêâ:\n %d",e);
	printf("Êîëè÷åñòâî ñòðî÷íûõ áóêâ:\n %d", f);
	printf("Êîëè÷åñòâî ïðîïèñíûõ:\n %d", g);
	printf("Êîëè÷åñòâî ãëàñíûõ:\n %d", h);
	printf("Êîëè÷åñòâî ñîãëàñíûõ:\n %d", i);
return 0;
}
